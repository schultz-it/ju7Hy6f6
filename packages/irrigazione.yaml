
############################################################
# PACKAGE: irrigazione.yaml — toggle RUN/STOP dai pulsantoni
# Include: selettore programma, sensori, automazioni, IU sequences,
# script di RUN, STOP e TOGGLE per i 4 programmi.
############################################################

input_boolean:
  irrigazione_master:
    name: Irrigazione attiva
    icon: mdi:valve
  force_irrigazione_oggi:
    name: Forza irrigazione (ignora meteo oggi)
    icon: mdi:water-check

input_number:
  soglia_pioggia_mm:
    name: Soglia pioggia (mm)
    min: 0
    max: 20
    step: 0.5
    unit_of_measurement: "mm"
    icon: mdi:weather-rainy
#    initial: 2.0
  soglia_prob_pioggia:
    name: Soglia probabilità pioggia (%)
    min: 0
    max: 100
    step: 5
    unit_of_measurement: "%"
    icon: mdi:umbrella-alert
#    initial: 70
  pioggia_ieri_mm:
    name: Pioggia ieri (mm)
    min: 0
    max: 100
    step: 0.1
    unit_of_measurement: "mm"
    icon: mdi:weather-pouring
    initial: 0

input_select:
  irrigazione_programma_attivo:
    name: Programma IU attivo
    icon: mdi:playlist-check
    options:
      - Avvio prato
      - Primavera
      - Autunno
      - Estate
      - Dummy
   # initial: Primavera

template:
  - trigger:
      - platform: homeassistant
        event: start
      - platform: time_pattern
        hours: "/1"
      - platform: state
        entity_id: weather.pirateweather
    sensor:
      - name: "Pioggia oggi (mm)"
        unit_of_measurement: "mm"
        state: "{{states('sensor.pirateweather2_liquid_accumulation_0d') }}"
      - name: "Probabilità pioggia oggi (%)"
        unit_of_measurement: "%"
        state: "{{ states('sensor.pirateweather2_precip_probability_0d') }}"
  - sensor:
      - name: "Programma IU attivo (stato)"
        unique_id: programma_iu_attivo_stato
        icon: mdi:sprinkler-variant
        state: >
          {% if is_state('binary_sensor.irrigation_unlimited_c1_s1','on') %}
            IN ESECUZIONE: Avvio prato
          {% elif is_state('binary_sensor.irrigation_unlimited_c1_s2','on') %}
            IN ESECUZIONE: Primavera
          {% elif is_state('binary_sensor.irrigation_unlimited_c1_s3','on') %}
            IN ESECUZIONE: Autunno
          {% elif is_state('binary_sensor.irrigation_unlimited_c1_s4','on') %}
            IN ESECUZIONE: Estate
          {% else %}
            Selezionato: {{ states('input_select.irrigazione_programma_attivo') }}
          {% endif %}
        attributes:
          selezionato: "{{ states('input_select.irrigazione_programma_attivo') }}"
  - binary_sensor:
      - name: "Irrigazione skip meteo"
        icon: mdi:cloud-cancel
        state: >
          {% set mm_today = states('sensor.pioggia_oggi_mm') | float(0) %}
          {% set p_today  = states('sensor.probabilita_pioggia_oggi') | int(0) %}
          {% set mm_yday  = states('input_number.pioggia_ieri_mm') | float(0) %}
          {% set mm_thr   = states('input_number.soglia_pioggia_mm') | float(2) %}
          {% set p_thr    = states('input_number.soglia_prob_pioggia') | int(70) %}
          {% set force    = is_state('input_boolean.force_irrigazione_oggi','on') %}
          {{ not force and (mm_today >= mm_thr or p_today >= p_thr or mm_yday >= mm_thr) }}
        attributes:
          motivo: >
            {% set mm_today = states('sensor.pioggia_oggi_mm') | float(0) %}
            {% set p_today  = states('sensor.probabilita_pioggia_oggi') | int(0) %}
            {% set mm_yday  = states('input_number.pioggia_ieri_mm') | float(0) %}
            {% set mm_thr   = states('input_number.soglia_pioggia_mm') | float(2) %}
            {% set p_thr    = states('input_number.soglia_prob_pioggia') | int(70) %}
            {% if mm_yday >= mm_thr and (mm_today >= mm_thr or p_today >= p_thr) %}
              Ieri {{mm_yday}} mm + oggi {{mm_today}} mm / {{p_today}}%
            {% elif mm_yday >= mm_thr %}
              Pioggia ieri: {{mm_yday}} mm ≥ {{mm_thr}} mm
            {% elif mm_today >= mm_thr %}
              Pioggia oggi prevista: {{mm_today}} mm ≥ {{mm_thr}} mm
            {% elif p_today >= p_thr %}
              Probabilità oggi alta: {{p_today}}% ≥ {{p_thr}}%
            {% else %}
              Nessuna soglia superata
            {% endif %}

automation:
  - alias: "Irrigazione: salva pioggia di oggi come ieri"
    mode: single
    trigger:
      - platform: time
        at: "23:55:00"
    action:
      - variables:
          mm_today: "{{ states('sensor.pioggia_oggi_mm') | float(0) }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.pioggia_ieri_mm
        data:
          value: "{{ mm_today }}"

  - alias: "Irrigazione: applica programma IU selezionato"
    mode: restart
    trigger:
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_select.irrigazione_programma_attivo
    action:
      - variables:
          sel: "{{ states('input_select.irrigazione_programma_attivo') }}"
      - service: irrigation_unlimited.disable
        target:
          entity_id:
            - binary_sensor.irrigation_unlimited_c1_s1
            - binary_sensor.irrigation_unlimited_c1_s2
            - binary_sensor.irrigation_unlimited_c1_s3
            - binary_sensor.irrigation_unlimited_c1_s4
      - choose:
          - conditions: "{{ sel == 'Avvio prato' }}"
            sequence:
              - service: irrigation_unlimited.enable
                target: { entity_id: binary_sensor.irrigation_unlimited_c1_s1 }
          - conditions: "{{ sel == 'Primavera' }}"
            sequence:
              - service: irrigation_unlimited.enable
                target: { entity_id: binary_sensor.irrigation_unlimited_c1_s2 }
          - conditions: "{{ sel == 'Autunno' }}"
            sequence:
              - service: irrigation_unlimited.enable
                target: { entity_id: binary_sensor.irrigation_unlimited_c1_s3 }
          - conditions: "{{ sel == 'Estate' }}"
            sequence:
              - service: irrigation_unlimited.enable
                target: { entity_id: binary_sensor.irrigation_unlimited_c1_s4 }

irrigation_unlimited:
  controllers:
    - name: "Giardino Correzzana"
      zones:
        - name: "Prato"
          entity_id: switch.shelly_irrigazione_prato
        - name: "Aiuola"
          entity_id: switch.shelly_irrigazione_aiuola
      sequences:
        - name: "Avvio prato (−1h alba, sempre)"
          schedules:
            # - time: "01:00"
            #   weekday: [mon, tue, wed, thu, fri, sat, sun]
            # - time: "03:00"
            #   weekday: [mon, tue, wed, thu, fri, sat, sun]
            # - time: "05:00"
            #   weekday: [mon, tue, wed, thu, fri, sat, sun]
            - time: "07:00"
              weekday: [mon, tue, wed, thu, fri, sat, sun]
            - time: "09:00"
              weekday: [mon, tue, wed, thu, fri, sat, sun]
            - time: "11:00"
              weekday: [mon, tue, wed, thu, fri, sat, sun]
            - time: "13:00"
              weekday: [mon, tue, wed, thu, fri, sat, sun]
            - time: "15:00"
              weekday: [mon, tue, wed, thu, fri, sat, sun]
            - time: "17:00"
              weekday: [mon, tue, wed, thu, fri, sat, sun]
            - time: "19:00"
              weekday: [mon, tue, wed, thu, fri, sat, sun]
            # - time: "21:00"
            #   weekday: [mon, tue, wed, thu, fri, sat, sun]
            # - time: "23:00"
            #   weekday: [mon, tue, wed, thu, fri, sat, sun]
          zones:
            - zone_id: 1
              duration: "00:03"
        - name: "Mantenimento Primavera (−1h alba, lun/giov/sab)"
          schedules:
            - time: { sun: sunrise, before: "01:00" }
              weekday: [mon, thu, sat]
          zones:
            - zone_id: 1
              duration: "00:05"
              delay: "00:00:03"
            - zone_id: 2
              duration: "00:10"
        - name: "Mantenimento Autunno (−1h alba, lun/giov/sab)"
          schedules:
            - time: { sun: sunrise, before: "01:00" }
              weekday: [mon, thu, sat]
          zones:
            - zone_id: 1
              duration: "00:05"
        - name: "Estate (−5 min tramonto, lun/giov/sab)"
          schedules:
            - time: { sun: sunset, before: "00:05" }
              weekday: [mon, thu, sat]
          zones:
            - zone_id: 1
              duration: "00:10"
              delay: "00:00:03"
            - zone_id: 2
              duration: "00:15"

script:
  # STOP "vero": ferma IU e spegne i relè, e disabilita le sequence per resettare i sensori
  irrigazione_stop_vero:
    alias: "Irrigazione — STOP (IU + Shelly)"
    sequence:
      - service: irrigation_unlimited.cancel
        target:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
      - delay: "00:00:01"
      - service: irrigation_unlimited.disable
        target:
          entity_id:
            - binary_sensor.irrigation_unlimited_c1_s1
            - binary_sensor.irrigation_unlimited_c1_s2
            - binary_sensor.irrigation_unlimited_c1_s3
            - binary_sensor.irrigation_unlimited_c1_s4
      - service: switch.turn_off
        target:
          entity_id:
            - switch.shelly_irrigazione_prato
            - switch.shelly_irrigazione_aiuola

  # RUN forzato per ciascun programma
  iu_run_s1_now:
    alias: "IU — Avvio prato (RUN ora)"
    sequence:
      - service: irrigation_unlimited.disable
        target:
          entity_id:
            - binary_sensor.irrigation_unlimited_c1_s1
            - binary_sensor.irrigation_unlimited_c1_s2
            - binary_sensor.irrigation_unlimited_c1_s3
            - binary_sensor.irrigation_unlimited_c1_s4
      - service: irrigation_unlimited.enable
        target:
          entity_id: binary_sensor.irrigation_unlimited_c1_s1
      - service: irrigation_unlimited.manual_run
        data:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
          sequence_id: 1

  iu_run_s2_now:
    alias: "IU — Primavera (RUN ora)"
    sequence:
      - service: irrigation_unlimited.disable
        target:
          entity_id:
            - binary_sensor.irrigation_unlimited_c1_s1
            - binary_sensor.irrigation_unlimited_c1_s2
            - binary_sensor.irrigation_unlimited_c1_s3
            - binary_sensor.irrigation_unlimited_c1_s4
      - service: irrigation_unlimited.enable
        target:
          entity_id: binary_sensor.irrigation_unlimited_c1_s2
      - service: irrigation_unlimited.manual_run
        data:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
          sequence_id: 2

  iu_run_s3_now:
    alias: "IU — Autunno (RUN ora)"
    sequence:
      - service: irrigation_unlimited.disable
        target:
          entity_id:
            - binary_sensor.irrigation_unlimited_c1_s1
            - binary_sensor.irrigation_unlimited_c1_s2
            - binary_sensor.irrigation_unlimited_c1_s3
            - binary_sensor.irrigation_unlimited_c1_s4
      - service: irrigation_unlimited.enable
        target:
          entity_id: binary_sensor.irrigation_unlimited_c1_s3
      - service: irrigation_unlimited.manual_run
        data:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
          sequence_id: 3

  iu_run_s4_now:
    alias: "IU — Estate (RUN ora)"
    sequence:
      - service: irrigation_unlimited.disable
        target:
          entity_id:
            - binary_sensor.irrigation_unlimited_c1_s1
            - binary_sensor.irrigation_unlimited_c1_s2
            - binary_sensor.irrigation_unlimited_c1_s3
            - binary_sensor.irrigation_unlimited_c1_s4
      - service: irrigation_unlimited.enable
        target:
          entity_id: binary_sensor.irrigation_unlimited_c1_s4
      - service: irrigation_unlimited.manual_run
        data:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
          sequence_id: 4

  # TOGGLE: se attivo -> STOP, altrimenti RUN
  iu_toggle_s1:
    alias: "IU — Toggle Avvio prato"
    sequence:
      - choose:
          - conditions: "{{ is_state('binary_sensor.irrigation_unlimited_c1_s1','on') }}"
            sequence:
              - service: script.turn_on
                target: { entity_id: script.irrigazione_stop_vero }
        default:
          - service: script.turn_on
            target: { entity_id: script.iu_run_s1_now }

  iu_toggle_s2:
    alias: "IU — Toggle Primavera"
    sequence:
      - choose:
          - conditions: "{{ is_state('binary_sensor.irrigation_unlimited_c1_s2','on') }}"
            sequence:
              - service: script.turn_on
                target: { entity_id: script.irrigazione_stop_vero }
        default:
          - service: script.turn_on
            target: { entity_id: script.iu_run_s2_now }

  iu_toggle_s3:
    alias: "IU — Toggle Autunno"
    sequence:
      - choose:
          - conditions: "{{ is_state('binary_sensor.irrigation_unlimited_c1_s3','on') }}"
            sequence:
              - service: script.turn_on
                target: { entity_id: script.irrigazione_stop_vero }
        default:
          - service: script.turn_on
            target: { entity_id: script.iu_run_s3_now }

  iu_toggle_s4:
    alias: "IU — Toggle Estate"
    sequence:
      - choose:
          - conditions: "{{ is_state('binary_sensor.irrigation_unlimited_c1_s4','on') }}"
            sequence:
              - service: script.turn_on
                target: { entity_id: script.irrigazione_stop_vero }
        default:
          - service: script.turn_on
            target: { entity_id: script.iu_run_s4_now }
