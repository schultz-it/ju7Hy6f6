- sensor:
    - name: FV Totale
      unique_id: fv_totale
      unit_of_measurement: "kWh"
      state: sensor.sh60rs_a2251102546_total_load_energy_consumption_from_pv

    - name: Percentuale Autoconsumo
      unique_id: percentuale_autoconsumo
      unit_of_measurement: "%"
      state: >
        {% set fv = states('sensor.fv_totale') | float %}
        {% set rete = states('sensor.purchased_from_grid') | float %}
        {% set tot = fv + rete %}
        {{ ((fv / tot) * 100) | round(1) if tot > 0 else 0 }}

    - name: "Instantaneous power deficit"
      unique_id: deficit_power_instantaneous
      unit_of_measurement: W
      device_class: power
      state: >
        {% set consumo = (states('sensor.consumo_istantaneo_totale') | float(0)) %}
        {% set fv = (states('sensor.produzione_istantanea_fv') | float(0)) %}
        {{ (consumo - fv) | round(0) }}
        
    - name: "Prossima irrigazione"
      unique_id: irrigation_next_schedule
      state: >
        {% set scenario = states('input_select.irrigation_scenario') %}
        {% if scenario == 'Avvio Prato' %}
          Prossima alle 01:00 ogni giorno
        {% elif scenario == 'Primavera' %}
          Prossima alle 05:00 lun/mer/ven (mar-mag)
        {% elif scenario == 'Autunno' %}
          Prossima alle 05:00 lun/mer/ven (set-nov)
        {% elif scenario == 'Estate' %}
          Prossima alle 01:00 lun/mer/ven (giu-ago)
        {% else %}
          Non programmato
        {% endif %}
        
    - name: "Consumo personale da rete orario"
      unit_of_measurement: "kWh"
      state: >
        {% set personale = states('sensor.consumo_personale_hourly') | float %}
        {% set grid = states('sensor.energia_rete_hourly') | float %}
        {% if personale <= grid %}
          {{ personale }}
        {% else %}
          {{ grid }}
        {% endif %}

    - name: "Consumo personale da fotovoltaico orario"
      unit_of_measurement: "kWh"
      state: >
        {% set personale = states('sensor.consumo_personale_hourly') | float %}
        {% set grid = states('sensor.energia_rete_hourly') | float %}
        {% if personale > grid %}
          {{ personale - grid }}
        {% else %}
          0
        {% endif %}